package model.views;

import model.entities.EmployeesImpl;
import model.entities.EmployeestoaptitudeImpl;

import oracle.jbo.Row;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jun 19 17:39:59 EEST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EmployeestoaptitudeViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(EmployeestoaptitudeViewRowImpl obj) {
                return obj.getId();
            }

            public void put(EmployeestoaptitudeViewRowImpl obj, Object value) {
                obj.setId((DBSequence)value);
            }
        }
        ,
        Aptitudeid {
            public Object get(EmployeestoaptitudeViewRowImpl obj) {
                return obj.getAptitudeid();
            }

            public void put(EmployeestoaptitudeViewRowImpl obj, Object value) {
                obj.setAptitudeid((Number)value);
            }
        }
        ,
        EmployeeId {
            public Object get(EmployeestoaptitudeViewRowImpl obj) {
                return obj.getEmployeeId();
            }

            public void put(EmployeestoaptitudeViewRowImpl obj, Object value) {
                obj.setEmployeeId((Number)value);
            }
        }
        ,
        DepartmentId {
            public Object get(EmployeestoaptitudeViewRowImpl obj) {
                return obj.getDepartmentId();
            }

            public void put(EmployeestoaptitudeViewRowImpl obj, Object value) {
                obj.setDepartmentId((Number)value);
            }
        }
        ,
        EmployeeId1 {
            public Object get(EmployeestoaptitudeViewRowImpl obj) {
                return obj.getEmployeeId1();
            }

            public void put(EmployeestoaptitudeViewRowImpl obj, Object value) {
                obj.setEmployeeId1((DBSequence)value);
            }
        }
        ,
        FirstName {
            public Object get(EmployeestoaptitudeViewRowImpl obj) {
                return obj.getFirstName();
            }

            public void put(EmployeestoaptitudeViewRowImpl obj, Object value) {
                obj.setFirstName((String)value);
            }
        }
        ,
        LastName {
            public Object get(EmployeestoaptitudeViewRowImpl obj) {
                return obj.getLastName();
            }

            public void put(EmployeestoaptitudeViewRowImpl obj, Object value) {
                obj.setLastName((String)value);
            }
        }
        ,
        AptitudeView {
            public Object get(EmployeestoaptitudeViewRowImpl obj) {
                return obj.getAptitudeView();
            }

            public void put(EmployeestoaptitudeViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DepartmentsToAptitude {
            public Object get(EmployeestoaptitudeViewRowImpl obj) {
                return obj.getDepartmentsToAptitude();
            }

            public void put(EmployeestoaptitudeViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(EmployeestoaptitudeViewRowImpl object);

        public abstract void put(EmployeestoaptitudeViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int APTITUDEID = AttributesEnum.Aptitudeid.index();
    public static final int EMPLOYEEID = AttributesEnum.EmployeeId.index();
    public static final int DEPARTMENTID = AttributesEnum.DepartmentId.index();
    public static final int EMPLOYEEID1 = AttributesEnum.EmployeeId1.index();
    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int APTITUDEVIEW = AttributesEnum.AptitudeView.index();
    public static final int DEPARTMENTSTOAPTITUDE = AttributesEnum.DepartmentsToAptitude.index();

    /**
     * This is the default constructor (do not remove).
     */
    public EmployeestoaptitudeViewRowImpl() {
    }

    /**
     * Gets Employeestoaptitude entity object.
     * @return the Employeestoaptitude
     */
    public EmployeestoaptitudeImpl getEmployeestoaptitude() {
        return (EmployeestoaptitudeImpl)getEntity(0);
    }

    /**
     * Gets Employees entity object.
     * @return the Employees
     */
    public EmployeesImpl getEmployees() {
        return (EmployeesImpl)getEntity(1);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public DBSequence getId() {
        return (DBSequence)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(DBSequence value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for APTITUDEID using the alias name Aptitudeid.
     * @return the APTITUDEID
     */
    public Number getAptitudeid() {
        return (Number) getAttributeInternal(APTITUDEID);
    }

    /**
     * Sets <code>value</code> as attribute value for APTITUDEID using the alias name Aptitudeid.
     * @param value value to set the APTITUDEID
     */
    public void setAptitudeid(Number value) {
        setAttributeInternal(APTITUDEID, value);
    }

    /**
     * Gets the attribute value for EMPLOYEEID using the alias name EmployeeId.
     * @return the EMPLOYEEID
     */
    public Number getEmployeeId() {
        return (Number) getAttributeInternal(EMPLOYEEID);
    }

    /**
     * Sets <code>value</code> as attribute value for EMPLOYEEID using the alias name EmployeeId.
     * @param value value to set the EMPLOYEEID
     */
    public void setEmployeeId(Number value) {
        setAttributeInternal(EMPLOYEEID, value);
    }

    /**
     * Gets the attribute value for DEPARTMENT_ID using the alias name DepartmentId.
     * @return the DEPARTMENT_ID
     */
    public Number getDepartmentId() {
        return (Number) getAttributeInternal(DEPARTMENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPARTMENT_ID using the alias name DepartmentId.
     * @param value value to set the DEPARTMENT_ID
     */
    public void setDepartmentId(Number value) {
        setAttributeInternal(DEPARTMENTID, value);
    }

    /**
     * Gets the attribute value for EMPLOYEE_ID using the alias name EmployeeId1.
     * @return the EMPLOYEE_ID
     */
    public DBSequence getEmployeeId1() {
        return (DBSequence)getAttributeInternal(EMPLOYEEID1);
    }

    /**
     * Sets <code>value</code> as attribute value for EMPLOYEE_ID using the alias name EmployeeId1.
     * @param value value to set the EMPLOYEE_ID
     */
    public void setEmployeeId1(DBSequence value) {
        setAttributeInternal(EMPLOYEEID1, value);
    }

    /**
     * Gets the attribute value for FIRST_NAME using the alias name FirstName.
     * @return the FIRST_NAME
     */
    public String getFirstName() {
        return (String) getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FIRST_NAME using the alias name FirstName.
     * @param value value to set the FIRST_NAME
     */
    public void setFirstName(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for LAST_NAME using the alias name LastName.
     * @return the LAST_NAME
     */
    public String getLastName() {
        return (String) getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_NAME using the alias name LastName.
     * @param value value to set the LAST_NAME
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link AptitudeView.
     */
    public Row getAptitudeView() {
        return (Row)getAttributeInternal(APTITUDEVIEW);
    }

    /**
     * Sets the master-detail link AptitudeView between this object and <code>value</code>.
     */
    public void setAptitudeView(Row value) {
        setAttributeInternal(APTITUDEVIEW, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link DepartmentsToAptitude.
     */
    public Row getDepartmentsToAptitude() {
        return (Row)getAttributeInternal(DEPARTMENTSTOAPTITUDE);
    }

    /**
     * Sets the master-detail link DepartmentsToAptitude between this object and <code>value</code>.
     */
    public void setDepartmentsToAptitude(Row value) {
        setAttributeInternal(DEPARTMENTSTOAPTITUDE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
