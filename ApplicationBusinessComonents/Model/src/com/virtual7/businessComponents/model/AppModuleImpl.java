package com.virtual7.businessComponents.model;

import com.virtual7.businessComponents.model.common.AppModule;
import com.virtual7.businessComponents.model.views.EmployeesWithCriteriasViewImpl;

import java.math.BigDecimal;

import java.util.Collection;

import java.util.Iterator;

import oracle.jbo.Variable;
import oracle.jbo.VariableValueManager;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaManager;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewDefImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 15 12:08:38 EEST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppModuleImpl extends ApplicationModuleImpl implements AppModule {
    /**
     * This is the default constructor (do not remove).
     */
    public AppModuleImpl() {
    }

    /**
     * Container's getter for DepartmentsView1.
     * @return DepartmentsView1
     */
    public ViewObjectImpl getDepartmentsView1() {
        return (ViewObjectImpl)findViewObject("DepartmentsView1");
    }

    /**
     * Container's getter for EmployeesWithCriteriasView1.
     * @return EmployeesWithCriteriasView1
     */
    public ViewObjectImpl getEmployeesWithCriteriasView() {
        return (ViewObjectImpl)findViewObject("EmployeesWithCriteriasView");
    }

    public void varEmail() {
//        ViewObjectImpl employees = getEmployeesWithCriteriasView();
//        String[] allViewCriteriaNames = employees.getAllViewCriteriaNames();
//
//        if (allViewCriteriaNames.length > 0) {
//            ViewCriteria viewCriteria = employees.getViewCriteria(allViewCriteriaNames[0]);
//            
//            employees.applyViewCriteria(viewCriteria);
//            System.out.println("Criteria applied: " + allViewCriteriaNames[0]);
//            
//            employees.executeQuery();
//        }
        
        //Alternate approach - oracle ADF Insider
        EmployeesWithCriteriasViewImpl employees = (EmployeesWithCriteriasViewImpl) getEmployeesWithCriteriasView();
        ViewCriteriaManager vcm = employees.getViewCriteriaManager();
        ViewCriteria emailVC = vcm.getViewCriteria("EmployeesEmailViewCriteria");
        VariableValueManager vvm = emailVC.ensureVariableManager();
        vvm.setVariableValue("EmailVar", "A");
        employees.setApplyViewCriteriaName("EmployeesEmailViewCriteria");
        
        employees.executeQuery();
    }

    public void varSalary() {
        ViewObjectImpl employees = getEmployeesWithCriteriasView();
        String[] allViewCriteriaNames = employees.getAllViewCriteriaNames();
        
        if (allViewCriteriaNames.length > 0) {
            ViewCriteria viewCriteria = employees.getViewCriteria(allViewCriteriaNames[2]);
            EmployeesWithCriteriasViewImpl empWithCriteria = (EmployeesWithCriteriasViewImpl)employees;
            
            empWithCriteria.setSalaryVar(new BigDecimal(8000));
            employees.applyViewCriteria(viewCriteria);
            System.out.println("Criteria applied: " + allViewCriteriaNames[2]);
            
            employees.executeQuery();
        }
    }

    public void varLName() {
        ViewObjectImpl employees = getEmployeesWithCriteriasView();
        String[] allViewCriteriaNames = employees.getAllViewCriteriaNames();
        
        if (allViewCriteriaNames.length > 0) {
            ViewCriteria viewCriteria = employees.getViewCriteria(allViewCriteriaNames[1]);
            EmployeesWithCriteriasViewImpl empWithCriteria = (EmployeesWithCriteriasViewImpl)employees;
            
            empWithCriteria.setLName("S");
            employees.applyViewCriteria(viewCriteria);
            System.out.println("Criteria applied: " + allViewCriteriaNames[1]);
            
            employees.executeQuery();
        }
    }

    public void varFName() {
        ViewObjectImpl employees = getEmployeesWithCriteriasView();
        employees.setNamedWhereClauseParam("bv_manager", 100);
        employees.executeQuery();
    }
    
    public void removeWhereClauseParam() {
        ViewObjectImpl employees = getEmployeesWithCriteriasView();
        ViewDefImpl a = new ViewDefImpl();
        //employees.removeNamedWhereClauseParam("bv_manager");
        String w = employees.getWhereClause();
        Object[] clauseParams = employees.getWhereClauseParams();
        EmployeesWithCriteriasViewImpl emp = (EmployeesWithCriteriasViewImpl) employees;
        emp.removeNamedWhereClauseParam("bv_manager");
        employees.executeQuery();
    }

    /**
     * Container's getter for EmployeesView.
     * @return EmployeesView
     */
    public ViewObjectImpl getEmployeesView1() {
        return (ViewObjectImpl)findViewObject("EmployeesView1");
    }


    /**
     * Container's getter for EmpHierarchy1.
     * @return EmpHierarchy1
     */
    public ViewObjectImpl getEmpHierarchy1() {
        return (ViewObjectImpl)findViewObject("EmpHierarchy1");
    }


}
